/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JDialog.java to edit this template
 */
package visao;

import controlador.GerenciadorInterfaceGrafica;
import dominio.Historia;
import dominio.HistoriaStatus;
import dominio.Personagem;
import dominio.PersonagensHistoria;
import dominio.Usuario;
import java.util.List;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;

/**
 *
 * @author Caio
 */
public class JDialogNovaHistoria extends javax.swing.JDialog {

    private DefaultListModel modeloLista;
    private Usuario usuario;
    private List<Personagem> personagensSelecionados;
    private Historia historiaSelecionada;

    /**
     * Creates new form JDialogNovaHistoria
     */
    public JDialogNovaHistoria(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        labelNome = new javax.swing.JLabel();
        textFieldNome = new javax.swing.JTextField();
        labelMestre = new javax.swing.JLabel();
        textFieldMestre = new javax.swing.JTextField();
        labelDesc = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        textAreaDesc = new javax.swing.JTextArea();
        btnCriar = new javax.swing.JButton();
        btnLimpar = new javax.swing.JButton();
        labelPersonagens = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        btnBuscarPersonagens = new javax.swing.JButton();
        btnBuscarUsr = new javax.swing.JButton();
        labelSelecionados = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        statusCombo = new javax.swing.JComboBox<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                formComponentShown(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel1.setText("Nova História");

        labelNome.setText("Nome:");

        labelMestre.setText("Mestre:");

        textFieldMestre.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                textFieldMestreMouseClicked(evt);
            }
        });

        labelDesc.setText("Descrição:");

        textAreaDesc.setColumns(20);
        textAreaDesc.setRows(5);
        jScrollPane1.setViewportView(textAreaDesc);

        btnCriar.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        btnCriar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/accept.png"))); // NOI18N
        btnCriar.setText("Criar");
        btnCriar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCriarActionPerformed(evt);
            }
        });

        btnLimpar.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        btnLimpar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/remove.png"))); // NOI18N
        btnLimpar.setText("Limpar");
        btnLimpar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLimparActionPerformed(evt);
            }
        });

        labelPersonagens.setText("Personagens:");

        jLabel2.setText("Selecionados:");

        btnBuscarPersonagens.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/pesquisar.png"))); // NOI18N
        btnBuscarPersonagens.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarPersonagensActionPerformed(evt);
            }
        });

        btnBuscarUsr.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/pesquisar.png"))); // NOI18N
        btnBuscarUsr.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarUsrActionPerformed(evt);
            }
        });

        jLabel3.setText("Status:");

        statusCombo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "EM ANDAMENTO", "FINALIZADA" }));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addComponent(jLabel1))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addComponent(labelNome)
                        .addGap(40, 40, 40)
                        .addComponent(textFieldNome, javax.swing.GroupLayout.PREFERRED_SIZE, 262, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addComponent(labelDesc))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 379, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addComponent(labelPersonagens)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(labelMestre)
                                        .addGap(37, 37, 37)))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(textFieldMestre, javax.swing.GroupLayout.PREFERRED_SIZE, 231, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(btnBuscarUsr))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(btnBuscarPersonagens)
                                        .addGap(117, 117, 117)
                                        .addComponent(jLabel3)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(statusCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(labelSelecionados, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(63, 63, 63)
                        .addComponent(btnCriar, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(41, 41, 41)
                        .addComponent(btnLimpar, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(6, 6, 6)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(5, 5, 5)
                                .addComponent(labelNome))
                            .addComponent(textFieldNome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(12, 12, 12)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(labelMestre)
                            .addComponent(textFieldMestre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(btnBuscarUsr))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(labelPersonagens)
                            .addComponent(btnBuscarPersonagens))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel2)
                            .addComponent(labelSelecionados, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(labelDesc)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnCriar, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnLimpar, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel3)
                        .addComponent(statusCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(27, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnCriarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCriarActionPerformed
        Historia historia;
        List<PersonagensHistoria> listaPersonagensHistoria;
        if (textFieldNome.getText().equals("") || textFieldMestre.getText().equals("") || textAreaDesc.getText().equals("")) {
            JOptionPane.showMessageDialog(this, "Preencha todos os campos!", "Cadastro de História", JOptionPane.ERROR_MESSAGE);
        } else {
            String nome = textFieldNome.getText();
            Usuario mestre = usuario;
            String descricao = textAreaDesc.getText();
            if (!labelSelecionados.getText().equals("")) {
                if (historiaSelecionada == null) {
                    historia = GerenciadorInterfaceGrafica.getInstancia().getGerDominio().inserirHistoria(nome, descricao, mestre);
                    for (Personagem personagem : personagensSelecionados) {
                      //   PersonagensHistoria perso = new PersonagensHistoria(..);
                     //    listaPersonagensHistoria.add(perso);
                         
                         
                        GerenciadorInterfaceGrafica.getInstancia().getGerDominio().inserirPersonagensHistoria(historia, personagem);
                    }
                    
                    JOptionPane.showMessageDialog(this, "História " + historia.getIdHis() + " inserida com sucesso.", "Cadastro de História", JOptionPane.INFORMATION_MESSAGE);
                } else{
                    HistoriaStatus status;
                    
                    if(statusCombo.getSelectedIndex() == 0){
                        status = HistoriaStatus.EM_ANDAMENTO;
                    } else{
                        status = HistoriaStatus.FINALIZADA;
                    }
                    GerenciadorInterfaceGrafica.getInstancia().getGerDominio().alterarHistoria(historiaSelecionada, nome, descricao, mestre, status);
                }
            } else {
                historia = GerenciadorInterfaceGrafica.getInstancia().getGerDominio().inserirHistoria(nome, descricao, mestre);
                JOptionPane.showMessageDialog(this, "História " + historia.getIdHis() + " inserida com sucesso.", "Cadastro de História", JOptionPane.INFORMATION_MESSAGE);
            }

            limparCampos();
            dispose();
        }
    }//GEN-LAST:event_btnCriarActionPerformed

    private void btnLimparActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLimparActionPerformed
        limparCampos();
    }//GEN-LAST:event_btnLimparActionPerformed

    private void textFieldMestreMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_textFieldMestreMouseClicked

    }//GEN-LAST:event_textFieldMestreMouseClicked

    private void btnBuscarPersonagensActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarPersonagensActionPerformed
        personagensSelecionados = GerenciadorInterfaceGrafica.getInstancia().abrirBuscarPer();
        if (personagensSelecionados != null) {
            labelSelecionados.setText(personagensSelecionados.toString());
        }
    }//GEN-LAST:event_btnBuscarPersonagensActionPerformed

    private void btnBuscarUsrActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarUsrActionPerformed
        usuario = GerenciadorInterfaceGrafica.getInstancia().abrirBuscarUsr();
        if (usuario != null) {
            textFieldMestre.setText(usuario.getNome());
        }
    }//GEN-LAST:event_btnBuscarUsrActionPerformed

    private void formComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_formComponentShown
        if (historiaSelecionada != null) {
            preencherCampos();
            btnCriar.setText("Editar");
        }
    }//GEN-LAST:event_formComponentShown

    private void limparCampos() {
        textFieldNome.setText("");
        textFieldMestre.setText("");
        textAreaDesc.setText("");
    }

    public void setHistoriaSelecionada(Historia historiaSelecionada) {
        this.historiaSelecionada = historiaSelecionada;
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBuscarPersonagens;
    private javax.swing.JButton btnBuscarUsr;
    private javax.swing.JButton btnCriar;
    private javax.swing.JButton btnLimpar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel labelDesc;
    private javax.swing.JLabel labelMestre;
    private javax.swing.JLabel labelNome;
    private javax.swing.JLabel labelPersonagens;
    private javax.swing.JLabel labelSelecionados;
    private javax.swing.JComboBox<String> statusCombo;
    private javax.swing.JTextArea textAreaDesc;
    private javax.swing.JTextField textFieldMestre;
    private javax.swing.JTextField textFieldNome;
    // End of variables declaration//GEN-END:variables

    private void preencherCampos() {
        textFieldNome.setText(historiaSelecionada.getNome());
        textAreaDesc.setText(historiaSelecionada.getDescricao());

        // Preenche mestre
        usuario = historiaSelecionada.getMestre();
        if (usuario != null) {
            textFieldMestre.setText(usuario.getNome());
        }

        // Preenche status
        HistoriaStatus status = historiaSelecionada.getStatus();
        if (status != null) {
            statusCombo.setSelectedItem(status.name().replace("_", " "));
        }

        // Preenche personagens selecionados
        List<PersonagensHistoria> personagensSelecionados = GerenciadorInterfaceGrafica.getInstancia()
                .getGerDominio()
                .pesquisarPersonagensHistoria(historiaSelecionada.getIdHis());
        if (personagensSelecionados != null && !personagensSelecionados.isEmpty()) {
            labelSelecionados.setText(personagensSelecionados.toString());
        } else {
            labelSelecionados.setText("");
        }
    }
}
